#!/bin/bash
# vim: dict+=/usr/share/beakerlib/dictionary.vim cpt=.,w,b,u,t,i,k
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#   runtest.sh of /CoreOS/llhttp/Security
#   Description: Test for CVE-2024-27982
#   Author: Sergio Correia <scorreia@redhat.com>
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#   Copyright (c) 2024 Red Hat, Inc.
#
#   This program is free software: you can redistribute it and/or
#   modify it under the terms of the GNU General Public License as
#   published by the Free Software Foundation, either version 2 of
#   the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be
#   useful, but WITHOUT ANY WARRANTY; without even the implied
#   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#   PURPOSE.  See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program. If not, see http://www.gnu.org/licenses/.
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Include Beaker environment
. /usr/share/beakerlib/beakerlib.sh || exit 1

rlJournalStart
  rlPhaseStartSetup
    rlAssertRpm llhttp || rlDie
    rlAssertRpm rpm-build || rlDie

    rlRun "rlFileBackup --clean ~/rpmbuild/"
    rlRun "TmpDir=\$(mktemp -d)" 0 "Creating tmp directory"
    rlRun "cp -a test/ ${TmpDir}/" 0 "Copy the tests to the temp directory"
    rlRun "pushd ${TmpDir}"
  rlPhaseEnd

  rlPhaseStartTest
    rlRun "rlFetchSrcForInstalled llhttp"

    rlRun "LLHTTP_SRPM=\$(rpm -q --queryformat 'llhttp-%{VERSION}-%{RELEASE}.src.rpm' llhttp)"
    rlRun "LLHTTP_BUILDDIR=~/rpmbuild/BUILD/\$(rpm -q --queryformat 'llhttp-%{VERSION}' llhttp)"
    rlRun "LLHTTP_SPEC=~/rpmbuild/SPECS/llhttp.spec"

    rlRun "rpm -i ${LLHTTP_SRPM}" 0 "Install llhttp source rpm"

    # Enabling PowerTools/CRB that may host some of the build dependencies.
    for _r in $(dnf repolist --all \
                | grep -iE 'crb|codeready|powertools' \
                | grep -ivE 'debug|source|latest' \
                | awk '{ print $1 }'); do
      dnf config-manager --set-enabled "${_r}" ||:
    done

    rlRun "dnf builddep -y \"${LLHTTP_SPEC}\"" 0 "Install llhttp build dependencies"
    rlRun "rpmbuild -bp \"${LLHTTP_SPEC}\"" 0 "Build llhttp without running the tests"

    # Prepare the test directory with artifacts from the build.
    for target in node_modules node_modules_dev package.json src; do 
      rlRun "ln -s \"${LLHTTP_BUILDDIR}"/${target}\"
    done

    # Run the tests. Let's use gcc instead of clang here, similar to
    # how we do in the spec file while building llhttp.
    rlRun "export CLANG=gcc"
    rlRun "export NODE_ENV=test"
    rlRun -s "./node_modules/.bin/mocha -r ts-node/register/type-check test/*-test.ts" \
	           0 "Run the relevant tests"
    rlAssertGrep "7 passing" "${rlRun_LOG}"
    rlAssertNotGrep " failing" "${rlRun_LOG}"
  rlPhaseEnd

  rlPhaseStartCleanup
    rlRun "popd"
    rlRun "rm -r ${TmpDir}" 0 "Removing tmp directory"
    rlFileRestore
  rlPhaseEnd
rlJournalEnd
# vim:set ts=2 sw=2 et:
